#When would you want to use a remote repository rather than keeping all your work local?
1. when I'm working on the project in multiple locations from different computers
2. for security - as a backup

#Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

1. to allow you to decide how when you commit, avoiding excessive small commits
2. You may be working on a machine where you don't want to locally store your repository.

#Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks: copies of a repository, usually another persons, though I guess you could fork your own.  It is basically a clone created on GitHub.

Clone: a copy of a repository with links to the original that you can push/pull with.  The original is called a remote and the default name is "origin"

Branch: a branch is an alternative development path within one repository.  It is a 'branch' off the master and can be merged into the master.

#What is the benefit of having a copy of the last known state of the remote stored locally?

1. You can easily compare and see how much you have changed

2. you can do branches and merges offline.

#How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

At my company we generally use Google Docs.  What would be harder?

1. Editing.  Instead of being able to use my favorite editor I would have to edit in Google Docs.

2. Keeping track of changes

3. Branching would be impossible.  We would all be working on the master.

However, integration of changes into the document would be easier unless I used an external tool (bc3, kdiff3) in Git.
